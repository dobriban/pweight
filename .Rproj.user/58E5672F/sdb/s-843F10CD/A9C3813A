{
    "contents" : "#' informed Genome-Wide Association Study\n#'\n#' Perform an informed Genome-Wide Association Study (iGWAS). This is based on a current study and a prior study. The goal is to discover significant SNPs in the current study using hypothesis testing. The prior study is used to improve power. P-values and sample sizes are used for both the current and the prior studies.\n#'\n#' This method computes the p-value weights based on the prior p-values, and uses them in multiple testing (p-value weighting) for the current p-values.  The p-value weighting method (e.g. Unweighted, Bayes) and the multiple testing adjustment (e.g. Bonferroni, Benjamini-Hochberg) can be specified independently.\n#'\n#'  For more details, see the paper \"Optimal Multiple Testing Under a\n#'  Gaussian Prior on the Effect Sizes\", by Dobriban, Fortney, Kim and Owen,\n#'   \\url{http://arxiv.org/abs/1504.02935}\n#'\n#'@param P_current P-values in the current study, a numeric vector of length J, with entries between 0 and 1\n#'@param N_current sample size in the current study, a positive integer (or vector of length J)\n#'@param P_prior P-values in the prior study, a numeric vector of length J, with entries between 0 and 1\n#'@param N_prior sample size in the current study, a positive integer (or vector of length J)\n#' @param q (optional) uncorrected level at which tests should be performed. Default \\code{q = 0.05}\n#' @param weighting_method (optional) weighting method used. Available methods: \\code{c(\"unweighted\",\n#' \"bayes\", \"spjotvoll\", \"exponential\")}. The default is \\code{\"bayes\"}.\n#' @param p_adjust_method (optional) adjustment method for multiple testing used. The available methods are\n#' \\code{\"genome-wide\"} and those from the \\code{p.adjust} function in the \\code{stats} package.:\n#' \\code{c(\"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\",  \"fdr\", \"none\")}.\n#' \\code{\"genome-wide\"} tests all hypotheses at the genome-wide level \\code{5*10^-8}.\n#' The default is \\code{\"genome-wide\"}.\n#' @param sides (optional) The prior p-values must be one or two-sided: sides = 1 or 2. Default \\code{sides = 2}\n#' @param phi (optional) dispersion factor used to multiply all standard errors. Default \\code{phi = 1}.\n#' Used only for Bayes weights.\n#' @param  beta (optional) weights are proportional to \\code{exp(mu*beta)}, default \\code{beta=2}.\n#' Used only for Exponential weights.\n#' @param  UB_exp (optional) upper bound on the weights (default \\code{UB = Inf}).\n#'  Used only for Exponential weights.\n#' @param  figure (optional) \\code{figure = \"T\"} creates a manhattan plot of the weighted and unweighted p-values.\n#' Possible values \\code{c(\"T\",\"F\")}, default \\code{\"F\"}\n#' @param  GWAS_data_frame (optional) when \\code{figure = \"T\"}, this is the parameter used to create a\n#' Manattan plot. it must be a data frame with columns containing \\code{c(\"CHR\",\"BP\")}.\n#' These parameters are passed to the qqman package for plotting manhattan plots. Default is NA.\n#'\n#'\n#'@return A list containing:\n#'\n#'\\code{sig_ind}: A vector of 0-1s indicating the significant tests (1-s)\n#'\n#'\\code{num_sig}: The number of significant tests. Equals \\code{sum(sig_ind)}\n#'\n#'\\code{w}: The computed p-value weights\n#'\n#'\\code{P_w}: The weighted p-values. These equal \\code{P_current/w}\n#'\n#' @family p-value weighting\n#'@export\n#'\niGWAS <-\n  function(P_current, N_current, P_prior, N_prior, q = 0.05, weighting_method = \"bayes\",\n           p_adjust_method = \"genome-wide\", sides = 2, phi = 1, beta = 2, UB_exp = Inf,\n           figure = \"F\", GWAS_data_frame=NA) {\n    # Error checking: stop if the variables are not in range\n    {\n      if (any(P_current > 1) |\n          any(P_current < 0) | any(P_prior > 1) | any(P_prior < 0)) {\n        stop(\"P-values must be between 0 and 1\")\n      }\n      if (any(N_current < 1) | any(N_prior < 1)) {\n        stop(\"Sample sizes must be at least 1\")\n      }\n      if ((q <= 0) |\n          (q >= 1)) {\n        stop(\"Level q at which tests will be performed must be in (0,1)\")\n      }\n      if (phi < 0) {\n        stop(\"Dispersion parameter phi for Bayes weights must be non-negative\")\n      }\n      if (UB_exp <= 1) {\n        stop(\"Upper bound UB for exponential weights must be greater than 1\")\n      }\n      if (!((sides == 1) | (sides == 2))) {\n        stop(\"The prior p-values must be one or two-sided: sides = 1 or 2\")\n      }\n    }\n\n    # Define auxiliary variables to compute weights\n    {\n      J <- length(P_current)\n      if (length(N_current) == 1) {\n        N_current <- N_current * rep(1,J)\n      }\n      if (length(N_prior) == 1) {\n        N_prior <- N_prior * rep(1,J)\n      }\n      T_prior <- qnorm(P_prior / sides)\n      mu <- T_prior * sqrt(N_current / N_prior)\n      sigma <- phi * sqrt(N_current / N_prior)\n    }\n\n    # Compute weights: switch according to 'weighting_method'\n    {\n      w_methods = c(\"unweighted\",\"bayes\",\"spjotvoll\",\"exponential\")\n      #for genome-wide significance level, need to adjust q\n      if (p_adjust_method == \"genome-wide\") {\n        sig_level = 5 * 10 ^(-8)\n        q = sig_level*J\n      }\n      switch(\n        weighting_method,\n        unweighted = {\n          w <- rep(1,J)\n        },\n        bayes = {\n          #note: the weight functions use q/J instead of q\n          if (phi>0) {\n          res <- bayes_weights(mu, sigma, q / J)\n          w <- res$w\n          } else  { #phi = 0\n            epsilon = 1e-3;\n            w <- spjotvoll_weights(-abs(mu)-epsilon, q / J)\n          }\n        },\n        spjotvoll = {\n          w <- spjotvoll_weights(mu, q / J)\n        },\n        exponential = {\n          w <- exp_weights(mu, beta, UB_exp)\n        },\n        {\n          cat(c(\"Available methods:\", methods))\n          stop(\"Method must be one of the available methods\")\n        }\n      )\n    }\n\n    #Perform weighted multiple testing\n    {\n      P_weighted <- P_current / w\n      #if the adjustment method is genome-wide, compare all p-values against Genome-wide significance\n      #threshold 5*10^{-8}\n      if (p_adjust_method == \"genome-wide\") {\n        sig_level = 5 * 10 ^(-8)\n        sig_ind <- (P_weighted < sig_level)\n      } else {\n      #if the adjustment method is something else, run p.adjust\n        P_w_adjusted <- p.adjust(P_weighted, p_adjust_method)\n        sig_ind <- (P_w_adjusted < q)\n      }\n      cat(\n        c(\n          \"Number of significant tests using\", weighting_method, \"weights and\", p_adjust_method, \"correction:\" , sum(sig_ind), \"\\n\"\n        )\n      )\n    }\n\n    #plot\n    if (figure==\"T\"){\n      library(qqman)\n      GWAS_data_frame$CHR <- as.numeric(GWAS_data_frame$CHR)\n      GWAS_data_frame$BP <- as.numeric(GWAS_data_frame$BP)\n      GWAS_data_frame_wt <- GWAS_data_frame\n      GWAS_data_frame_wt$P <- P_weighted\n\n      manhattan(GWAS_data_frame_wt, ylim=c(0,29), col = c(\"chartreuse\", \"chartreuse\"), suggestiveline=F)\n      par(new=T)\n      manhattan(GWAS_data_frame, ylim=c(0,29), col = c(\"black\", \"black\"), suggestiveline=F)\n    }\n    results <- list(\n      \"w\" = w, \"P_w\" = P_weighted, \"sig_ind\" = sig_ind, \"num_sig\" = sum(sig_ind)\n    )\n    return(results)\n  }\n",
    "created" : 1429747026761.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "3434683618",
    "id" : "A9C3813A",
    "lastKnownWriteTime" : 1429752713,
    "path" : "C:/Git/pweight/R/iGWAS.R",
    "project_path" : "R/iGWAS.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}